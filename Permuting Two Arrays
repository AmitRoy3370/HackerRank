import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the twoArrays function below.
    static String twoArrays(int k, int[] A, int[] B) {

List<Integer> a=new ArrayList<>();
List<Integer> b=new ArrayList<>();

for(int i=0;i<A.length;i++ ){
    
    a.add( A[i] );
    
}

for(int i=0;i<B.length;i++ ){
    
    b.add( B[i] );
    
}

Collections.sort(a);
Collections.sort(b,Collections.reverseOrder() );

boolean b1=false;

for(int i=0;i<a.size();i++ ){
    
    if( a.get(i)+b.get(i)>=k ){
        
        b1=true;
        
    }else{
        
        b1=false;
        
        break;
        
    }
    
}

if( b1==true ){
    
    return "YES";
    
}


return "NO";

    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int q = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int qItr = 0; qItr < q; qItr++) {
            String[] nk = scanner.nextLine().split(" ");

            int n = Integer.parseInt(nk[0]);

            int k = Integer.parseInt(nk[1]);

            int[] A = new int[n];

            String[] AItems = scanner.nextLine().split(" ");
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

            for (int i = 0; i < n; i++) {
                int AItem = Integer.parseInt(AItems[i]);
                A[i] = AItem;
            }

            int[] B = new int[n];

            String[] BItems = scanner.nextLine().split(" ");
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

            for (int i = 0; i < n; i++) {
                int BItem = Integer.parseInt(BItems[i]);
                B[i] = BItem;
            }

            String result = twoArrays(k, A, B);

            bufferedWriter.write(result);
            bufferedWriter.newLine();
        }

        bufferedWriter.close();

        scanner.close();
    }
}
