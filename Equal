import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

//static long ans=Long.MAX_VALUE;

    // Complete the equal function below.
    

    // Complete the equal function below.
    
    static int sum(int data){
        
        return data/5+(data%5)/2+data%5%2;
        
    }
    
    static long equal(int a[]){
        
        int ans[][]=new int [3][a.length];
        
        Arrays.sort(a);
        
        for(int i=0;i<3;i++){
            
            int sum=0;
            
            for(int j=0;j<a.length;j++){
                
                int data=a[j]-a[0]+i;
                
                sum+=sum(data);
                
                ans[i][j]=sum;
                
            }
           
        }
        
        long min=Long.MAX_VALUE;
        
        for( int i=0;i<3;i++ ){
            
            if( min>ans[i][a.length-1] ){
                
                min=ans[i][a.length-1];
                
            }
            
        }
        
        return min;
    }
    
    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int t = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int tItr = 0; tItr < t; tItr++) {
            int n = scanner.nextInt();
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

            int[] arr = new int[n];

            String[] arrItems = scanner.nextLine().split(" ");
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

            for (int i = 0; i < n; i++) {
                int arrItem = Integer.parseInt(arrItems[i]);
                arr[i] = arrItem;
            }

            long result = equal(arr);

            bufferedWriter.write(String.valueOf(result));
            bufferedWriter.newLine();
        }

        bufferedWriter.close();

        scanner.close();
    }
}
