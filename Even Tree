import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Even_Tree {

    static Scanner scanner=new Scanner(System.in);
    
    static int node,edges,a,b;
    
    static class Graph{
    
    int number,root;

        public Graph(int number, int root) {
            this.number = number;
            this.root = root;
        }

        public Graph() {
    
        
        }

        public int getNumber() {
            return number;
        }

        public void setNumber(int number) {
            this.number = number;
        }

        public int getRoot() {
            return root;
        }

        public void setRoot(int root) {
            this.root = root;
        }
        
}
    
    static List<Graph> list=new ArrayList<>();
    
   static Graph graph=new Graph();
    
    public static void main(String[] args) {
        
        node=scanner.nextInt();
        edges=scanner.nextInt();
        
        for(int i=0;i<node;i++){
            
            graph=new Graph(1,-1);
            
            list.add(graph);
            
        }
        
        for(int i=0;i<edges;i++){
            
            a=scanner.nextInt();
            b=scanner.nextInt();
            
            try{
                
                list.set(a-1, new Graph( 1,b-1 ) );
                
            }catch(Exception e){
                
                
            }
            
        }
        
        for(int i=node-1;i>0;i--){
            
            if( list.get(i).getRoot()>=0 ){
                
   list.set(list.get(i).getRoot()  ,new Graph(
   
           list.get( list.get(i).getRoot() ).getNumber()+list.get(i).getNumber()
   ,list.get(  list.get(i).getRoot()).getRoot()
           
   )  );
                
            }
            
        }
        
        int count=0;
        
        for(int i=0;i<node;i++){
            
            if( list.get(i).getRoot()>=0 &&
                    list.get(i).getNumber()%2==0){
                
                count++;
                
            }
            
        }
        
        System.out.println(count);
        
    }
    
}
/*10 9
2 1
3 1
4 3
5 2
6 1
7 2
8 6
9 8
10 8*/
